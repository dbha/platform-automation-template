

- name: bbr-backup-tas
  serial: true
  serial_groups: [ bbr-backup ]
  plan:
    - in_parallel:
        - get: platform-automation-image
          params:
            unpack: true
        - get: platform-automation-tasks
          params:
            unpack: true
        - get: platform-auto-config
        - get: platform-auto-pipeline
        - get: bbr-release
          params:
            globs: [ "bbr-*-linux-*"]
        - get: bbr-image
    - do:
        - task: prepare-tasks-with-secrets-platform-auto-pipeline
          <<: *prepare-tasks-with-secrets-platform-auto-pipeline

        - task: bbr-backup
          image: bbr-image
          file: platform-auto-pipeline/custom-tasks/bbr-backup-product.yml
          input_mapping:
            config: platform-auto-config
          params:
            ENV_FILE: ((foundation))/configs/env.yml
            FOUNDATION: ((foundation))
            PRODUCT_NAME: cf
          on_failure:
            task: bbr-cleanup
            image: bbr-image
            file: platform-auto-pipeline/custom-tasks/bbr-cleanup-product.yml
            input_mapping:
              config: platform-auto-config
            params:
              ENV_FILE: ((foundation))/configs/env.yml
              PRODUCT_NAME: cf
        - put: tas-backup-bucket
          params:
            file: backup-artifact/((foundation))-cf-backup_*.tar
