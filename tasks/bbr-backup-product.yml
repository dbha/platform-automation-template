## https://github.com/pivotal-cf/bbr-pcf-pipeline-tasks/tree/master/tasks/bbr-backup-pas
---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: pcfplatformrecovery/bbr-pcf-pipeline-tasks
    tag: final

inputs:
  - name: pipelines
    # Directory containing the bbr executable
  - name: bbr-release
  - name: config

outputs:
  # Contains `director-backup.tar` artifact created by `bbr director backup`
  - name: backup-artifact

params:
  ENV_FILE: env.yml
  FOUNDATION:
  PRODUCT_NAME: cf

run:
  path: bash
  args:
    - -exc
    - |
      #!/usr/bin/env bash

      set -eu

      #cat deployed_products.json
      ## install jq
      ##apt-get install jq -y


      # shellcheck disable=SC1090
      ##source "$( dirname "$0" )/../../scripts/export-director-metadata"

      current_date="$( date +"%Y-%m-%d-%H-%M-%S" )"

      ## for BOSH_ENVIRONMENT, $BOSH_CA_CERT, BOSH_CLIENT, BOSH_CLIENT_SECRET
      om --env ./config/$ENV_FILE bosh-env > bosh-env.sh
      source bosh-env.sh
      #DEBUG
      env

      ## Get CF deployment guid
      om --env ./config/$ENV_FILE curl -p /api/v0/deployed/products > deployed_products.json
      DEPLOYMENT_NAME=$(jq -r '.[] | select(.type == "'${PRODUCT_NAME}'") | .guid' "deployed_products.json")
      export DEPLOYMENT_NAME
      echo $DEPLOYMENT_NAME

      mv ./bbr-release/*linux* ./bbr-release/bbr
      chmod +x ./bbr-release/bbr

      # Get bbr ssh credentials
      om --env ./config/$ENV_FILE curl -p /api/v0/deployed/director/credentials/bbr_ssh_credentials > bbr_ssh_credentials.json

      ## parse deployment
      jq -r '.[] | .value.private_key_pem' bbr_ssh_credentials.json > bbr_ssh_credentials

      ##DEBUG
      cat bbr_ssh_credentials

      pushd backup-artifact
        ../bbr-release/bbr deployment --target "${BOSH_ENVIRONMENT}" \
          --username $BOSH_CLIENT \
          --password $BOSH_CLIENT_SECRET \
          --deployment $DEPLOYMENT_NAME \
          --ca-cert $BOSH_CA_CERT \
          backup

        tar -cvf "${FOUNDATION}-${PRODUCT_NAME}-backup_${current_date}.tar" --remove-files -- */*
      popd
